name: Publish

on:
  release:
    types: [published]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  build_wheels:
    name: Build wheels ${{ matrix.version }}-${{ matrix.buildplat[1] }}
    runs-on: ${{ matrix.buildplat[0] }}
    strategy:
      fail-fast: false
      matrix:
        buildplat:
        - [ubuntu-20.04, manylinux_x86_64]
        - [ubuntu-20.04, manylinux_aarch64]
        - [macos-10.15, macosx_x86_64]
        version:
        - "cp37"
        - "cp38"
        - "cp39"
        - "cp310"

    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        if: matrix.buildplat[1] == 'manylinux_aarch64'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: arm64

      - name: Get MacOS build dependencies
        if: matrix.buildplat[1] == 'macosx_x86_64'
        run: |
          git clone https://github.com/nlesc-nano/nano-qmflows-manylinux

          cd nano-qmflows-manylinux/macos
          tar -xzf macos_deps.tar.gz
          cp -r output/bin/* /usr/local/bin/
          cp -r output/lib/* /usr/local/lib/
          cp -r output/include/* /usr/local/include/
          cp -r output/share/* /usr/local/share/

      - name: Build wheels (x86_64)
        uses: pypa/cibuildwheel@v2.4.0
        if: matrix.buildplat[1] != 'manylinux_aarch64'
        env:
          CIBW_BUILD: ${{ matrix.version }}-${{ matrix.buildplat[1] }}

      - name: Build wheels (aarch64)
        uses: pypa/cibuildwheel@v2.4.0
        if: matrix.buildplat[1] == 'manylinux_aarch64'
        env:
          CIBW_BUILD: ${{ matrix.version }}-${{ matrix.buildplat[1] }}
          CIBW_ARCHS_LINUX: aarch64

      - uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build wheels sdist
    runs-on: ubuntu-latest
    env:
      QMFLOWS_INCLUDEDIR: ""
      QMFLOWS_LIBDIR: ""
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3

      - name: Install dependencies
        run: pip install Cython "setuptools>=48.0" wheel "pybind11>=2.2.4"

      - name: Python info
        run: |
          which python
          python --version

      - name: Installed packages
        run: pip list

      - name: Build sdist
        run: |
          python setup.py sdist
          tree dist

      - uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./dist/*.tar.gz

  test_sdist:
    name: Test wheels sdist
    runs-on: ubuntu-latest
    needs: [build_sdist]
    steps:
    - uses: actions/checkout@v3

    - name: Install CP2K
      run: bash scripts/download_cp2k.sh x86_64 9.1

    - name: Info CP2K
      run: cp2k.popt --version

    - name: Setup conda
      uses: s-weigand/setup-conda@v1
      with:
        update-conda: true

    - uses: actions/download-artifact@v3
      with:
        name: wheels
        path: dist

    - name: Install dependencies
      run: |
        conda install -c conda-forge boost eigen libint==2.6.0 highfive
        cd dist
        pip install *.tar.gz -v
        pip install -r ../test_requirements.txt

    - name: Conda info
      run: conda info

    - name: Conda list
      run: conda list

    - name: Test with pytest
      run: |
        mkdir /tmp/nanoqm
        cp setup.cfg /tmp/nanoqm/
        cp conftest.py /tmp/nanoqm/conftest.py
        cp -r test /tmp/nanoqm/test
        cd /tmp/nanoqm
        pytest -m "not (slow or long)"

  upload_wheels:
    name: Upload wheels
    runs-on: ubuntu-latest
    needs: [test_sdist, build_wheels]
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: wheels
          path: dist

      - name: Set up Python
        uses: actions/setup-python@v3

      - name: Install dependencies
        run: pip install twine

      - name: Python info
        run: |
          which python
          python --version

      - name: Installed packages
        run: pip list

      - name: Validate wheels
        run: |
          tree dist
          twine check dist/*

      - name: Publish wheels
        if: github.event_name == 'release'
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}

      - name: Attach wheels to GitHub release
        if: github.event_name == 'release'
        uses: AButler/upload-release-assets@v2.0
        with:
          files: 'dist/*'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
