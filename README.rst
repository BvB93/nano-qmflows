
.. image:: https://travis-ci.org/SCM-NV/qmworks-namd.svg?branch=master
    :target: https://travis-ci.org/SCM-NV/qmworks-namd
.. image:: https://img.shields.io/github/license/felipeZ/nonAdiabaticCoupling.svg?maxAge=2592000
    :target: https://github.com/felipeZ/nonAdiabaticCoupling/blob/master/LICENSE
.. image:: https://img.shields.io/github/release/SCM-NV/qmworks-namd.svg
    :target: https://github.com/SCM-NV/qmworks-namd/releases
.. image:: https://img.shields.io/badge/python-3.5-blue.svg
.. image:: https://img.shields.io/codacy/grade/e27821fb6289410b8f58338c7e0bc686.svg?maxAge=2592000
    :target: https://www.codacy.com/app/tifonzafel/nonAdiabaticCoupling/dashboard
====================
QMWorks-NAMD
====================

One of the main problems to calculate (numerically) non-adiabatic coupling vectors (NACV) by standard quantum chemical (QM) packages is the computation of the overlap matrices between two electronically excited states at two consecutive time-steps that are needed in the numerical differentiation to evaluate the coupling. This happens because most of these softwares are inherently static, i.e. properties are computed for a given structural configuration, and the computation of the overlap matrices at different times requires complicated scripting tools to handle input/outputs of several QM packages. 

QMWorks-NAMD is a generic python library with the purpose of computing (numerically) NACVs using several quantum chemical (QM) packages 

==========================
Advantages and Limitations
==========================
QMWorks-NAMD is based on the approximation that all excited states are represented by singly excited-state determinants. This means that the computation of the NACVs boils down to the computation of molecular orbitals (MOs) coefficients at given points of time using an electronic structure code and an atomic overlap matrix S(t,t+dt) computed between two consecutive time step in an atomic orbital (AO) basis. QMWorks-NAMD main advantage is to use an internal module to compute efficiently the atomic overlap matrix S(t, t+dt) by employing the same basis-set used in the electronic structure calculation. In this way QMWorks-NAMD lifts the "time" burden and the QM codes can be used only to retrieve the MOs coefficients at time t and t+dt. This approach is very useful because the interface to a QM code then boils down to writing a simple module that reads the MOs coefficients in the specific code format. At this moment, QMWorks-NAMD handles output formats generated by CP2K, Orca, and Gamess, but, as said, it can be easily extended to other codes. 

QMWorks-NAMD has been designed mostly to be an interface to Pyxaid, a python program that performs non-adiabatic molecular dynamic (NAMD) simulations using the classical path approximation (CPA). The CPA is based on the assumption that nuclear dynamics of the system remains unaffected by the dynamics of the electronic degrees of freedom. Hence, the electronic dynamics remains driven by the ground state nuclear dynamics. CPA is usually valid for extended materials or cluster materials of nanometric size. 

In this framework, QMWorks-NAMD requires as input the coordinates of a pre-computed trajectory (at a lower level or at the same level of theory) in xyz format and the input parameters of the SCF code (HF and DFT). QMWorks-NAMD will then calculate the overlap matrix between different MOs by correcting their phase and will also track the nature of each state at the crossing seam using a min-cost algorithm . The NACVs are computed using the Hamann-Tully 2-point approximation and the recent Meek-Levine approach. The NACVs are then written in Pyxaid format for subsequent NAMD simulations.     

Finally, QMWorks-NAMD can be used in benchmarks studies to test new code developments by providing a platform that uses all the functionalities of QMWorks.    

For further information on the theory behind QMWorks-NAMD and how to use it, you can visit the following webpage:

http://scm-nv.github.io/qmworks-namd/ 
 
Installation
============

In order to install the *nonadiabaticCoupling* library you need to install first the **QMWorks** package and its environment using *Anaconda* as detailed here_.

.. _here: https://github.com/SCM-NV/qmworks

Then,  to install the **nonadiabaticCoupling** library type the following command inside the conda environment::

  (qmworks) user@server> pip install https://github.com/felipeZ/nonAdiabaticCoupling/tarball/master#egg=nac --upgrade

Overview
========
 The Library contains the numerical routines written in cython_ and numpy_ that are the core of the library. While the scripts are set of workflows to compute different properties using different approximations that can be tuned by the user.

.. _cython: http://cython.org
.. _numpy: http://www.numpy.org

Worflow to calculate Hamiltonians for nonadiabatic molecular simulations
************************************************************************
The figure represents schematically a Worflow to compute the **Hamiltonians** that described the behavior and coupling between the excited state of a molecular system. These **Hamiltonians** are used by thy PYXAID_ simulation package to carry out nonadiabatic molecular dynamics.

.. image:: docs/images/nac_worflow.png

.. _PYXAID: https://www.acsu.buffalo.edu/~alexeyak/pyxaid/overview.html
